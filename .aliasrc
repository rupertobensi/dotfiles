#!/bin/sh

# Use neovim for vim if present.
command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d"

# Verbosity and optimized settings
alias \
  batr="cat /sys/class/power_supply/BAT?/capacity" \
  cp="cp -iv" \
  cal="cal -m" \
  fd="fd -a -j4" \
  mv="mv -iv" \
  rg="rg --no-ignore-vcs" \
  rm="rm -vI" \
  mkd="mkdir -pv" \
	yt="yt-dlp --add-metadata -i" \
  ytmp3="yt-dlp -x --audio-format mp3" \
  yta="yt -x -f bestaudio/best" \
  ffmpeg="ffmpeg -hide_banner"

# Colorize commands when possible.
alias \
	ls="ls -hN --color=auto --group-directories-first" \
	grep="grep --color=auto" \
	diff="diff --color=auto" \
	ccat="highlight --out-format=ansi"

# These common commands are just too long! Abbreviate them.
alias \
	ka="killall" \
	YT="ytfzf -t" \
	YTP="pipe-viewer" \
	sdn="sudo shutdown -h now" \
	rdn="sudo reboot" \
	f="$FILE" \
	sf="sudo $FILE" \
	e="$EDITOR" \
    se="sudo $EDITOR" \
	p="sudo pacman"


# Config shortcuts
alias \
    cfalacritty.yml="nvim ~/.config/alacritty/alacritty.yml" \
    cfalacritty_dd.yml="nvim ~/.config/alacritty/alacritty_dd.yml" \
    cfaliasrc="nvim ~/.aliasrc" \
    cfcode_settings.json="nvim ~/.config/Code\ -\ OSS/User/settings.json" \
    cffonts.conf="nvim ~/.config/fontconfig/fonts.conf" \
    cfi3_config="nvim ~/.config/i3/config" \
    cfmpd.conf="nvim ~/.mpd/mpd.conf" \
    cfmpv.conf="nvim ~/.config/mpv/mpv.conf" \
    cfmpv_input.conf="nvim ~/.config/mpv/input.conf" \
    cfncmpcpp_bindings="nvim ~/.ncmpcpp/bindings" \
    cfncmpcpp_config="nvim ~/.ncmpcpp/config" \
    cfnewsboat_config="nvim ~/.config/newsboat/config" \
    cfnewsboat_urls="nvim ~/.config/newsboat/urls" \
    cfnvim_init.vim="nvim ~/.config/nvim/init.vim" \
    cfnvim_plugins="nvim ~/.config/nvim/plugins.vim" \
    cfpicom.conf="nvim ~/.config/picom/picom.conf" \
    cfpolybar_config="nvim ~/.config/polybar/config.ini" \
    cfranger_rc.conf="nvim ~/.config/ranger/rc.conf" \
    cfranger_rifle.conf="nvim ~/.config/ranger/rifle.conf" \
    cfst_config.h="nvim ~/st/config.h" \
    cftmux.conf="nvim ~/.tmux.conf" \
    cfvifmrc="nvim ~/.config/vifm/vifmrc" \
    cfxinitrc="nvim ~/.xinitrc" \
    cfxprofile="nvim ~/.xprofile" \
    cfXresources="nvim ~/.Xresources" \
    cfzimrc="nvim ~/.zsh/.zimrc" \
    cfzprofile="nvim ~/.zsh/.zprofile" \
    cfzshenv="nvim ~/.zsh/.zshenv" \
    cfzshrc="nvim ~/.zsh/.zshrc"

# Monitor configuration shortcuts
alias m1on="xrandr --output DP-1 --primary --mode 2560x1440 --rate 120"
alias m1off="xrandr --output DP-1 --off"
alias m2on="xrandr --output HDMI-1 --right-of DP-1 --mode 1920x1080 --rate 60"
alias m2off="xrandr --output HDMI-1 --off"

# Various programs
alias \
    ab-pr="absolutely-proprietary" \
    audio="pulsemixer" \
    cdu="cdu -sidh" \
    Cal="calcurse" \
    disko="diskonaut" \
    imgur="imgur_downloader" \
    keep="keepassxc-cli" \
    myip="curl api.ipify.org" \
    nc="ncmpcpp" \
    ncdu="ncdu --color dark" \
    newsb="newsboat" \
    snap="sudo timeshift --create --comment" \
    snapg="sudo timeshift-gtk" \
    snapl="sudo timeshift --list" \
    snapr="sudo timeshift --restore" \
    rs="redshift-gtk &" \
    rsm="redshift -PO 4500" \
    rsx="pkill -USR1 redshift" \
    rsX="redshift -x" \
    rtv="tuir" \
    tra="tremc" \
    vifm="vifmrun"

# Docker aliases
alias d="docker"
alias d1="watch -n 1 docker ps -a"
alias dp="d ps -a"
alias dl="d logs"
alias dt="d top"
alias de="d exec -it"
alias di="d images"
alias dx="d rm --force"
alias dX="d rm"
alias dr="d restart"
alias ds="d start"
alias dS="d stop"
alias drmi="d rmi"
alias drmI="d rmi --force"

alias dc="docker-compose up -d"
alias dC="docker-compose down"

# Kubernetes aliases
alias k="kubectl"
alias k1="watch -n 1 kubectl get pods -A"
alias ka="k apply -f"
alias kA="k apply -fk"
alias kc="k create -f"
alias kC="k create -fk"
alias kx="k delete -f"
alias kX="k delete"
alias ke="k exec -it"

alias kgp="k get pods"
alias kgP="k get pods -A"
alias kgn="k get no"
alias kgd="k get deploy"
alias kgs="k get svc"
alias kgpv="k get pv"
alias kgpvc="k get pvc"

alias kdp="k describe pod"
alias kdd="k describe deploy"
alias kl="k logs"
alias ke="k exec -it"

# trash-cli
alias \
tli="trash-list" \
tp="trash-put" \
tre="trash-restore" \
tem="trash-empty"

alias \
bitcoin="cointop" \
bitcoin2="curl rate.sx" \
corona="curl -L covid19.trackercli.com" \
duck="ddgr" \
emoticon="echo ðŸ˜º" \
google="googler" \
nitrogens="nitrogen --set-zoom-fill --save" \
stocks="mop" \
sudoku="nudoku" \
tilixp="tilix --preferences"

alias \
visudo!="sudo EDITOR=nvim visudo" \
wali="wal -i" \
walr="wal -R" \
wttr="curl wttr.in"

# notes (compatible with VimWiki plugin)
alias \
note="nvim /mnt/e/ROBERT/SYNC/notes/index.md" \
notes="nvim /mnt/e/ROBERT/SYNC/notes/notes.md" \
notesa="nvim /mnt/e/ROBERT/SYNC/notes/README.md" \
notesc="nvim /mnt/e/ROBERT/SYNC/notes/cheatsheet.md" \
notesg="nvim /mnt/e/ROBERT/SYNC/notes/gamesMovies.md" \
notesl="nvim /mnt/e/ROBERT/SYNC/notes/notes_LIN.md" \
notesm="nvim /mnt/e/ROBERT/SYNC/notes/macOS.md" \
notesp="nvim /mnt/e/ROBERT/SYNC/notes/pp.md" \
notesw="nvim /mnt/e/ROBERT/SYNC/notes/windows.md" \
notesyay="nvim /mnt/e/ROBERT/SYNC/notes/yaypacman.md"

# this copies the output of a program to the clipboard for easy use elsewhere (Ctrl+V). For #example, I copied the above line from my .bashrc using this: grep xclip .bashrc | xc
alias xc="xclip -sel clipboard"
# copy with progress bars:
alias pmv="pymv --preserve --global-pbar -i"
alias pcp="pycp --preserve --global-pbar -i"
# ncmpcpp scripts:
alias muzc="/home/robi/.dotfiles/.ncmpcpp/cover.sh" # Show album cover
alias n="tmux source-file ~/.ncmpcpp/tmux_session_new_window" # ncmpcpp + album cover + new window
alias N="tmux source-file ~/.ncmpcpp/tmux_session" # ncmpcpp + album cover, but in the same window

# root privileges
alias doas="doas --"

# get top process eating memory
alias psmem="ps auxf | sort -nr -k 4"
alias psmem10="ps auxf | sort -nr -k 4 | head -10"

# get top process eating cpu ##
alias pscpu="ps auxf | sort -nr -k 3"
alias pscpu10="ps auxf | sort -nr -k 3 | head -10"

# the terminal rickroll
alias rickroll="curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash"

# i3
alias i3e="i3 exit"
alias i3s="i3-save-tree"

# Changing "ls" to "exa"
alias \
ls="exa --group-directories-first --color=always" \
l="ls -la --icons" \
la="ls -a" \
lla="ls -l" \
lt="ls --tree" \
li="ls -a --icons"

# Tmux aliases
alias \
ta="tmux attach -t" \
tad="tmux attach -d -t" \
tkso="tmux kill-session -a" \
tkss="tmux kill-session -t" \
tksv="tmux kill-server" \
tl="tmux list-sessions" \
tmuxSrc="tmux source-file ~/.tmux.conf" \
ts="tmux new-session -s"

# Reloading configurations
alias Src="source ~/.zsh/.zshrc"
alias Xrdb="xrdb ~/.Xresources"

# Pipe shortcuts
alias -g E="| $EDITOR"
alias -g F="| fzf"
alias -g G="| grep -i"
alias -g C="| wc -m"
alias -g W="| wc -w"
alias -g L="| wc -l"

# VMs
alias VM="i3-msg 'workspace 9; exec vboxmanage startvm Deborah' && sleep 1.5; i3-msg 'focus output DP-1, workspace 1;'"
alias vm="ssh -p 3022 robert@localhost"
alias VMstart="vboxmanage startvm Deborah --type headless"
alias VMstop="vboxmanage controlvm Deborah acpipowerbutton"

# Mouse speed

alias mouse="sudo xinput set-prop 'Logitech USB Receiver' 'libinput Accel Speed'"
alias mousedef="sudo xinput set-prop 'Logitech USB Receiver' 'libinput Accel Speed' 0"

###
### PROGRAMS
###

### RANGER q/Q
# q quits ranger normally
# capital Q quits and changed dir
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )

    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$PWD" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}

### VIFM Q
vicd()
{
    local dst="$(command vifm --choose-dir - "$@")"
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
}

### MKDIR n CD
mkcdir () {
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

### I3 CHEATSHEET
function i3c {
  grep -E "^bindsym" ~/.config/i3/config | awk '{$1=""; print $0}' | sed 's/^ *//g' | grep -vE "^XF86" | fzf
}

###
### PACKAGE MANAGERS
###

#
## APT
#

if (( $+commands[apt-get] )); then
  alias aptu="sudo apt update; sudo apt full-upgrade"
  alias aptU="sudo apt full-upgrade"
  alias apty="sudo apt update"
  alias apti="sudo apt install"
  alias aptI="sudo dpkg --install"
  alias aptx="sudo apt remove"
  alias aptr="sudo apt purge"
  alias aptc="sudo apt clean"
  alias aptq="apt show"
  alias aptp="apt policy"
  alias apts="apt search"
  alias aptS="dpkg-query -l"
  alias apto="dpkg-query -S"
  alias aptl="dpkg-query -L"
  alias aptL="dpkg-deb -c"
  alias aptor="sudo apt autoremove"
fi


#
## AUR HELPER
#

alias yay="paru"

if (( $+commands[paru] )); then
  alias yey="paru -Syu --noconfirm"
  alias yayu="paru -Syu"
  alias yayU="paru -Su"
  alias yayy="paru -Sy"
  alias yayY="sudo paru -Fy"
  alias yayi="paru -S"
  alias yayI="sudo paru -U"
  alias yays="paru --sync --search"
  alias yayS="paru --query --search"
  alias yayq="paru --sync --info -i"
  alias yayQ="paru --query --info"
  alias yayl="paru --files --list"
  alias yayL="paru --query --list"
  alias yayo="paru --files --regex"
  alias yayO="paru --query --owns"
  alias yayk="sudo paru --query --check"
  alias yayc="sudo paru -Scc"
  alias yayx="sudo paru --remove --nosave"
  alias yayX="sudo paru --remove --nosave --recursive"
  alias yayr="sudo paru --remove --nosave --recursive --cascade"
  alias yayR="sudo paru --remove --nosave --recursive --recursive --cascade"
  alias yayol="paru -Qdt"
  alias yayor="yayr \$(paru -Qdtq)" ## orphans
  alias yayb="makepkg -scCif"
  alias yayd="paru -G"
  alias yayD="paru -Gd"

  aurd() git clone https://aur.archlinux.org/$1.git

  # compdef '_dispatch pacman pacman' paru
fi

# last 20 installed packages:
alias yay20="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 20"
# last 100 installed packages:
alias yay100="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 100"
# browse ALL installed packages with an instant preview of each package:
alias yayfzfa="pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'"
# browse installed by ME packages with an instant preview of each package:
alias yayfzf="pacman -Qeq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'"

# remove orphaned packages
# alias yayxorphans="sudo pacman -Rns $(pacman -Qtdq)"

# pipe out list of programs
yayqeq () {
      cd &&
      yay -Qeq >! yayqeq.txt
}

#
## PYTHON PIP
#

if (( $+commands[pip] )); then
  alias pipi="pip install --upgrade"
  alias pipI="pip install --upgrade --user"
  alias pipr="pip uninstall"
  alias pipl="pip list --format=columns --local"
  alias pipL="pip list --format=columns --user"
  alias pipf="pip freeze --local --all"
  alias pipfr="pip freeze --local --all >| requirements.txt"
  alias pipF="pip freeze --user"
  alias pipFr="pip freeze --user >| requirements.txt"
  alias pipd="pipdeptree -l"
  alias pipdd="pipdeptree -l | =grep -P '^(?!pip)(?!setuptools)(?!nvim)[\w0-9\-=.]+'"
  alias pipD="pipdeptree --user-only"
  alias pipu="pip-upgrade"
  alias pipU="pip-upgrade --skip-virtualenv-check"

  alias pyv="python3 -m venv"
  alias pyV="python3 -m venv --system-site-packages"
  alias pya="source bin/activate"
  alias pyd="deactivate"
fi

#
## GIT
#

git_current_branch () {
        local ref
        ref=$(command git symbolic-ref --quiet HEAD 2> /dev/null)
        local ret=$?
        if [[ $ret != 0 ]]
        then
                [[ $ret == 128 ]] && return
                ref=$(command git rev-parse --short HEAD 2> /dev/null)  || return
        fi
        echo ${ref#refs/heads/}
}

alias g=git
alias ga='git add'
alias gaa='git add --all'
alias gapa='git add --patch'
alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbda='git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
alias gbl='git blame -b -w'
alias gbnm='git branch --no-merged'
alias gbr='git branch --remote'
alias gbs='git bisect'
alias gbsb='git bisect bad'
alias gbsg='git bisect good'
alias gbsr='git bisect reset'
alias gbss='git bisect start'
alias gc='git commit -v'
alias 'gc!'='git commit -v --amend'
alias gca='git commit -v -a'
alias 'gca!'='git commit -v -a --amend'
alias gcam='git commit -a -m'
alias 'gcan!'='git commit -v -a --no-edit --amend'
alias 'gcans!'='git commit -v -a -s --no-edit --amend'
alias gcb='git checkout -b'
alias gcd='git checkout develop'
alias gcf='git config --list'
alias gcl='git clone --recursive'
alias gclean='git clean -fd'
alias gcm='git checkout master'
alias gcmsg='git commit -m'
alias 'gcn!'='git commit -v --no-edit --amend'
alias gco='git checkout'
alias gcount='git shortlog -sn'
alias gcp='git cherry-pick'
alias gcpa='git cherry-pick --abort'
alias gcpc='git cherry-pick --continue'
alias gcs='git commit -S'
alias gcsm='git commit -s -m'
alias gd='git diff'
alias gdca='git diff --cached'
alias gdct='git describe --tags `git rev-list --tags --max-count=1`'
alias gdt='git diff-tree --no-commit-id --name-only -r'
alias gdw='git diff --word-diff'
alias gf='git fetch'
alias gfa='git fetch --all --prune'
alias gfo='git fetch origin'
alias gg='git gui citool'
alias gga='git gui citool --amend'
alias ggpull='git pull origin $(git_current_branch)'
alias ggpush='git push origin $(git_current_branch)'
alias ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
alias ghh='git help'
alias gignore='git update-index --assume-unchanged'
alias gignored='git ls-files -v | grep "^[[:lower:]]"'
alias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'
alias gk='\gitk --all --branches'
alias gke='\gitk --all $(git log -g --pretty=%h)'
alias gl='git pull'
alias glg='git log --stat'
alias glgg='git log --graph'
alias glgga='git log --graph --decorate --all'
alias glgm='git log --graph --max-count=10'
alias glgp='git log --stat -p'
alias glo='git log --oneline --decorate'
alias glog='git log --oneline --decorate --graph'
alias gloga='git log --oneline --decorate --graph --all'
alias glol='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
alias glola='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit --all'
alias glp=_git_log_prettily
alias glum='git pull upstream master'
alias gm='git merge'
alias gmom='git merge origin/master'
alias gmt='git mergetool --no-prompt'
alias gmtvim='git mergetool --no-prompt --tool=vimdiff'
alias gmum='git merge upstream/master'
alias gp='git push'
alias gpd='git push --dry-run'
alias gpoat='git push origin --all && git push origin --tags'
alias gpristine='git reset --hard && git clean -dfx'
alias gpsup='git push --set-upstream origin $(git_current_branch)'
alias gpu='git push upstream'
alias gpv='git push -v'
alias gr='git remote'
alias gra='git remote add'
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbi='git rebase -i'
alias grbm='git rebase master'
alias grbs='git rebase --skip'
alias grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias grh='git reset HEAD'
alias grhh='git reset HEAD --hard'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias grset='git remote set-url'
alias grt='cd $(git rev-parse --show-toplevel || echo ".")'
alias gru='git reset --'
alias grup='git remote update'
alias grv='git remote -v'
alias gsb='git status -sb'
alias gsd='git svn dcommit'
alias gsi='git submodule init'
alias gsps='git show --pretty=short --show-signature'
alias gsr='git svn rebase'
alias gss='git status -s'
alias gst='git status'
alias gsta='git stash save'
alias gstaa='git stash apply'
alias gstc='git stash clear'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash show --text'
alias gsu='git submodule update'
alias gts='git tag -s'
alias gtv='git tag | sort -V'
alias gunignore='git update-index --no-assume-unchanged'
alias gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
alias gup='git pull --rebase'
alias gupv='git pull --rebase -v'
alias gwch='git whatchanged -p --abbrev-commit --pretty=medium'
alias gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'

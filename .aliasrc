#!/bin/sh

# Use neovim for vim if present.
command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d"

# Verbosity and optimized settings
alias \
	batr="cat /sys/class/power_supply/BAT?/capacity" \
	cp="cp -iv" \
    fd="fd -a -j4" \
	mv="mv -iv" \
    rg="rg --no-ignore-vcs" \
	rm="rm -vI" \
	mkd="mkdir -pv" \
	yt="youtube-dl --add-metadata -i" \
    ytmp3="youtube-dl -x --audio-format mp3" \
	yta="yt -x -f bestaudio/best" \
	ffmpeg="ffmpeg -hide_banner"

# Colorize commands when possible.
alias \
	ls="ls -hN --color=auto --group-directories-first" \
	grep="grep --color=auto" \
	diff="diff --color=auto" \
	ccat="highlight --out-format=ansi"

# These common commands are just too long! Abbreviate them.
alias \
	ka="killall" \
	YT="ytfzf -t" \
	YTP="pipe-viewer" \
	sdn="sudo shutdown -h now" \
	rdn="sudo reboot" \
	f="$FILE" \
	sf="sudo $FILE" \
	e="$EDITOR" \
    se="sudo $EDITOR" \
	p="sudo pacman"


# Config shortcuts
alias \
	cfalacritty.yml="nvim ~/.config/alacritty/alacritty.yml" \
	cfalacritty_dd.yml="nvim ~/.config/alacritty/alacritty_dd.yml" \
	cfaliasrc="nvim ~/.aliasrc" \
    cfcode_settings.json="nvim ~/.config/Code\ -\ OSS/User/settings.json" \
	cffonts.conf="nvim ~/.config/fontconfig/fonts.conf" \
	cfi3_config="nvim ~/.config/i3/config" \
	cfmpd.conf="nvim ~/.mpd/mpd.conf" \
	cfmpv.conf="nvim ~/.config/mpv/mpv.conf" \
	cfmpv_input.conf="nvim ~/.config/mpv/input.conf" \
	cfncmpcpp_bindings="nvim ~/.ncmpcpp/bindings" \
	cfncmpcpp_config="nvim ~/.ncmpcpp/config" \
	cfnewsboat_config="nvim ~/.config/newsboat/config" \
	cfnewsboat_urls="nvim ~/.config/newsboat/urls" \
	cfnvim_init.vim="nvim ~/.config/nvim/init.vim" \
	cfnvim_plugins="nvim ~/.config/nvim/plugins.vim" \
	cfpicom.conf="nvim ~/.config/picom/picom.conf" \
	cfpolybar_config="nvim ~/.config/polybar/config.ini" \
	cfranger_rc.conf="nvim ~/.config/ranger/rc.conf" \
	cfranger_rifle.conf="nvim ~/.config/ranger/rifle.conf" \
	cfst_config.h="nvim ~/st/config.h" \
	cftmux.conf="nvim ~/.tmux.conf" \
	cfvifmrc="nvim ~/.config/vifm/vifmrc" \
	cfxinitrc="nvim ~/.xinitrc" \
	cfxprofile="nvim ~/.xprofile" \
	cfXresources="nvim ~/.Xresources" \
	cfzprezto="nvim ~/.zprezto/runcoms/.zpreztorc" \
	cfzprofile="nvim ~/.zprofile" \
	cfzshenv="nvim ~/.zshenv" \
	cfzshrc="nvim ~/.zshrc"

# Monitor configuration shortcuts
alias m2off="xrandr --output HDMI-0 --off"
alias m2on="xrandr --output DisplayPort-0 --primary --mode 2560x1440 --output HDMI-0 --mode 1920x1080 --right-of DisplayPort-0; (pbr &)"

# Various programs
alias \
    ab-pr="absolutely-proprietary" \
    audio="pulsemixer" \
    cdu="cdu -sidh" \
    Cal="calcurse" \
    deezer="smloadr --path ~/Downloads" \
    disko="diskonaut" \
    fm="vifmrun" \
    imgur="imgur_downloader" \
    keep="keepassxc-cli" \
    myip="curl api.ipify.org" \
    nc="ncmpcpp" \
    ncdu="ncdu --color dark" \
    newsb="newsboat" \
    rs="redshift -PO 4500" \
    rsx="redshift -x" \
    rtv="tuir" \
    tra="tremc"

# trash-cli
alias \
tli="trash-list" \
tp="trash-put" \
tre="trash-restore" \
tem="trash-empty"

alias \
bitcoin="cointop" \
bitcoin2="curl rate.sx" \
corona="curl -L covid19.trackercli.com" \
duck="ddgr" \
emoticon="echo ðŸ˜º" \
google="googler" \
nitrogens="nitrogen --set-zoom-fill --save" \
stocks="mop" \
sudoku="nudoku" \
tilixp="tilix --preferences"

alias \
visudo!="sudo EDITOR=nvim visudo" \
wali="wal -i" \
walr="wal -R" \
wttr="curl wttr.in"

# notes (compatible with VimWiki plugin)
alias \
note="nvim /mnt/e/Robert/DROPBOX/Linux/index.md" \
notes="nvim /mnt/e/Robert/DROPBOX/Linux/notes.md" \
notesa="nvim /mnt/e/Robert/DROPBOX/Linux/README.md" \
notesc="nvim /mnt/e/Robert/DROPBOX/Linux/cheatsheet.md" \
notesg="nvim /mnt/e/Robert/DROPBOX/Linux/gamesMovies.md" \
notesl="nvim /mnt/e/Robert/DROPBOX/Linux/notes_LIN.md" \
notesm="nvim /mnt/e/Robert/DROPBOX/Linux/macOS.md" \
notesp="nvim /mnt/e/Robert/DROPBOX/Linux/pp.md" \
notesw="nvim /mnt/e/Robert/DROPBOX/Linux/windows.md" \
notesyay="nvim /mnt/e/Robert/DROPBOX/Linux/yaypacman.md"

# this copies the output of a program to the clipboard for easy use elsewhere (Ctrl+V). For #example, I copied the above line from my .bashrc using this: grep xclip .bashrc | xc
alias xc="xclip -sel clipboard"
# copy with progress bars:
alias pmv="pymv --preserve --global-pbar -i"
alias pcp="pycp --preserve --global-pbar -i"
# ncmpcpp scripts:
alias muzc="/home/robi/.dotfiles/.ncmpcpp/cover.sh"
alias n="tmux source-file ~/.ncmpcpp/tmux_session_neww" # Same but in a new tmux window
alias N="tmux source-file ~/.ncmpcpp/tmux_session" # Tmux session with ncmpcpp and cover art

# root privileges
alias doas="doas --"

# get top process eating memory
alias psmem="ps auxf | sort -nr -k 4"
alias psmem10="ps auxf | sort -nr -k 4 | head -10"

# get top process eating cpu ##
alias pscpu="ps auxf | sort -nr -k 3"
alias pscpu10="ps auxf | sort -nr -k 3 | head -10"

# the terminal rickroll
alias rickroll="curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash"

# KDE logout with confirmation, without and locking widgets. Also, i3 exit.
alias kdel="qdbus org.kde.ksmserver /KSMServer logout 0 3 3"
alias kdeL="qdbus org.kde.ksmserver /KSMServer logout 1 3 3"
alias i3e="i3 exit"
alias i3s="i3-save-tree"

# Run megasync client without some QT variables
#alias megax="DO_NOT_UNSET_QT_QPA_PLATFORMTHEME=1 DO_NOT_SET_DESKTOP_SETTINGS_UNAWARE=1 megasync"
alias megs="mega-sync"
# KDE aliases for locking/unlocking plasma
#alias kdew="qdbus org.kde.plasmashell /PlasmaShell evaluateScript "lockCorona(false)"
#alias kdeW="qdbus org.kde.plasmashell /PlasmaShell evaluateScript "lockCorona(true)"

# Changing "ls" to "exa"
alias \
    ls="exa --group-directories-first --color=always" \
    l="ls -l" \
    la="ls -a" \
    lla="ls -la" \
    lt="ls --tree" \
    li="ls -a --icons"

# Tmux aliases
alias \
ta="tmux attach -t" \
tad="tmux attach -d -t" \
tkso="tmux kill-session -a" \
tkss="tmux kill-session -t" \
tksv="tmux kill-server" \
tl="tmux list-sessions" \
tmuxSrc="tmux source-file ~/.tmux.conf" \
ts="tmux new-session -s"

# Reloading configurations
alias Src="source ~/.dotfiles/.zprezto/runcoms/.zshrc"
alias Xrdb="xrdb ~/.Xresources"

# Pipe shortcuts
alias -g E="| $EDITOR"
alias -g F="| fzf"
alias -g G="| grep -i"
alias -g C="| wc -m"
alias -g W="| wc -w"
alias -g L="| wc -l"


###
### PROGRAMS
###

### RANGER q/Q
# q quits ranger normally
# capital Q quits and changed dir
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )

    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$PWD" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}

###VIFM Q
vicd()
{
    local dst="$(command vifm --choose-dir - "$@")"
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
}

### MKDIR n CD
mkcdir () {
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

### I3 CHEATSHEET
function i3c {
  grep -E "^bindsym" ~/.config/i3/config | awk '{$1=""; print $0}' | sed 's/^ *//g' | grep -vE "^XF86" | fzf
}

###
### PACKAGE MANAGERS
###

#
## APT
#

if (( $+commands[apt-get] )); then
  alias aptu="sudo apt update; sudo apt full-upgrade"
  alias aptU="sudo apt full-upgrade"
  alias apty="sudo apt update"
  alias apti="sudo apt install"
  alias aptI="sudo dpkg --install"
  alias aptx="sudo apt remove"
  alias aptr="sudo apt purge"
  alias aptc="sudo apt clean"
  alias aptq="apt show"
  alias aptp="apt policy"
  alias apts="apt search"
  alias aptS="dpkg-query -l"
  alias apto="dpkg-query -S"
  alias aptl="dpkg-query -L"
  alias aptL="dpkg-deb -c"
  alias aptor="sudo apt autoremove"
fi


#
## AUR HELPER
#

alias yay="paru"

if (( $+commands[paru] )); then
  alias yayu="paru -Suy"
  alias yayU="paru -Su"
  alias yayy="paru -Sy"
  alias yayY="sudo paru -Fy"
  alias yayi="paru -S"
  alias yayI="sudo paru -U"
  alias yays="paru --sync --search"
  alias yayS="paru --query --search"
  alias yayq="paru --sync --info -i"
  alias yayQ="paru --query --info"
  alias yayl="paru --files --list"
  alias yayL="paru --query --list"
  alias yayo="paru --files --regex"
  alias yayO="paru --query --owns"
  alias yayk="sudo paru --query --check"
  alias yayc="sudo paru -Scc"
  alias yayx="sudo paru --remove --nosave"
  alias yayX="sudo paru --remove --nosave --recursive"
  alias yayr="sudo paru --remove --nosave --recursive --cascade"
  alias yayR="sudo paru --remove --nosave --recursive --recursive --cascade"
  alias yayol="paru -Qdt"
  alias yayor="yayr \$(paru -Qdtq)" ## orphans
  alias yayb="makepkg -scCif"
  alias yayd="paru -G"
  alias yayD="paru -Gd"

  aurd() git clone https://aur.archlinux.org/$1.git

  compdef '_dispatch pacman pacman' paru
fi

# last 20 installed packages:
alias yay20="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 20"
# last 100 installed packages:
alias yay100="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 100"
# browse ALL installed packages with an instant preview of each package:
alias yayfzfa="pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'"
# browse installed by ME packages with an instant preview of each package:
alias yayfzf="pacman -Qeq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'"

# remove orphaned packages
# alias yayxorphans="sudo pacman -Rns $(pacman -Qtdq)"

# pipe out list of programs
yayqeq () {
      cd &&
      yay -Qeq >! yayqeq.txt
}

#
## PYTHON PIP
#

if (( $+commands[pip] )); then
  alias pipi="pip install --upgrade"
  alias pipI="pip install --upgrade --user"
  alias pipr="pip uninstall"
  alias pipl="pip list --format=columns --local"
  alias pipL="pip list --format=columns --user"
  alias pipf="pip freeze --local --all"
  alias pipfr="pip freeze --local --all >| requirements.txt"
  alias pipF="pip freeze --user"
  alias pipFr="pip freeze --user >| requirements.txt"
  alias pipd="pipdeptree -l"
  alias pipdd="pipdeptree -l | =grep -P '^(?!pip)(?!setuptools)(?!nvim)[\w0-9\-=.]+'"
  alias pipD="pipdeptree --user-only"
  alias pipu="pip-upgrade"
  alias pipU="pip-upgrade --skip-virtualenv-check"

  alias pyv="python3 -m venv"
  alias pyV="python3 -m venv --system-site-packages"
  alias pya="source bin/activate"
  alias pyd="deactivate"
fi

#
## GIT
#

alias g="git"
alias g..="cd \$(git rev-parse --show-toplevel)"
alias gcheck="git fsck --no-reflogs --unreachable"
alias gclean="git -c gc.reflogExpire=0 -c gc.reflogExpireUnreachable=0 -c gc.rerereresolved=0 -c gc.rerereunresolved=0 -c gc.pruneExpire=now gc --aggressive"

alias gb="git branch"
alias gbc="git checkout -b"
alias gbl="git branch -vv"
alias gbL="git branch --all -vv"
alias gbm="git branch --move"
alias gbM="git branch --move --force"
alias gbs="git show-branch"
alias gbS="git show-branch --all"
alias gbx="git branch --delete"
alias gbX="git branch --delete --force"

alias gc="git commit --verbose"
alias gca="git commit --verbose --all"
alias gcm="git commit --message"
alias gcM="git commit --all --message"
alias gcf="git commit --amend --verbose"
alias gcF="git commit --amend --verbose --all"
alias gcr="git commit --amend --reuse-message HEAD"
alias gcR="git commit --amend --reuse-message HEAD --all"
alias gco="git checkout"
alias gcO="git checkout --patch"
alias gcp="git cherry-pick --ff"
alias gcP="git cherry-pick --no-commit"
alias gcd="git show"
alias gcD="git show --stat"
alias gcs="git commit -S"
alias gcS="git show --show-signature"
alias gcv="git verify-commit"
alias gcy="git cherry -v --abbrev"
alias gcY="git cherry -v"

alias gCl="git --no-pager diff --diff-filter=U --name-only"
alias gCa="git add \$(gCl)"
alias gCe="git mergetool \$(gCl)"
alias gCo="git checkout --ours --"
alias gCO="gCo \$(gCl)"
alias gCt="git checkout --theirs --"
alias gCT="gCt \$(gCl)"

alias gd="git ls-files"
alias gdc="git ls-files --cached"
alias gdx="git ls-files --deleted"
alias gdm="git ls-files --modified"
alias gdu="git ls-files --other --exclude-standard"
alias gdk="git ls-files --killed"
alias gdi="git status --porcelain --short --ignored | sed -n 's/^!! //p'"

alias gf="git fetch"
alias gfa="git fetch --all"
alias gfc="git clone"
alias gfC="git clone --recurse-submodules"
alias gfm="git pull"
alias gfr="git pull --rebase"
alias gfu="git fetch --all --prune && git merge --ff-only @\{u\}"

alias gg="git grep"
alias ggi="git grep --ignore-case"
alias ggl="git grep --files-with-matches"
alias ggL="git grep --files-without-match"
alias ggv="git grep --invert-match"
alias ggw="git grep --word-regexp"

alias gia="git add"
alias giA="git add --patch"
alias giu="git add --update"
alias giU="git add --all"
alias gid="git diff --cached"
alias giD="git diff --cached --stat"
alias gir="git reset"
alias giR="git reset --patch"
alias gib="git reset 'HEAD^'"
alias gix="git rm --cached -r"
alias giX="git rm --cached -rf"

alias gl="git log --topo-order"
alias glo="git log --topo-order --pretty=oneline"
alias gls="git log --topo-order --stat"
alias glp="git log --topo-order --patch"
alias glP="git log --topo-order --patch --full-diff"
alias glg="git log --topo-order --all --graph"
alias glG="git log --topo-order --all --graph --date=relative"
alias glt="git log --graph --decorate --oneline \$(git rev-list -g --all)"
alias glv="git log --topo-order --show-signature"
alias glc="git shortlog --summary --numbered"

alias gm="git mere"
alias gmC="git merge --no-commit"
alias gmF="git merge --no-ff"
alias gma="git merge --abort"
alias gmt="git mergetool"

alias gp="git push"
alias gpf="git push --force-with-lease"
alias gpF="git push --force"
alias gpa="git push --all"
alias gpA="git push --all && git push --tags"
alias gpb="git push -u origin"
alias gpt="git push --tags"

alias gr="git rebase"
alias gra="git rebase --abort"
alias grc="git rebase --continue"
alias gri="git rebase --interactive"
alias grs="git rebase --skip"

alias gR="git remote"
alias gRl="git remote --verbose"
alias gRa="git remote add"
alias gRx="git remote rm"
alias gRm="git remote rename"
alias gRu="git remote update"
alias gRp="git remote prune"
alias gRs="git remote show"

alias gs="git stash"
alias gsa="git stash apply"
alias gsx="git stash drop"
alias gsl="git stash list"
alias gsd="git stash show --patch --stat"
alias gsp="git stash pop"
alias gss="git stash save --include-untracked"
alias gsS="git stash save --patch --no-keep-index"
alias gsw="git stash save --include-untracked --keep-index"
alias gsu="git stash show --patch | git apply --reverse"

alias gS="git submodule"
alias gSa="git submodule add"
alias gSf="git submodule foreach"
alias gSi="git submodule init"
alias gSI="git submodule update --init"
alias gSd="git submodule deinit"
alias gSl="git submodule status"
alias gSs="git submodule sync"
alias gSu="git submodule update"
alias gSU="git submodule update --merge"
alias gSr="git submodule update --remote"
alias gSR="git submodule update --remote --merge"

alias gt="git tag"
alias gts="git tag --sign"
alias gtv="git verify-tag"
alias gtx="git tag --delete"

alias gws="git status --short"
alias gwS="git status"
alias gwd="git diff --no-ext-diff"
alias gwD="git diff --stat"
alias gwr="git reset --soft"
alias gwR="git reset --hard"
alias gwc="git clean --dry-run"
alias gwC="git clean -d --force"
alias gwx="git rm -r"
alias gwX="git rm -rf"g
